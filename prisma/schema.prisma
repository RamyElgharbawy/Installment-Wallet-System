generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  user
  admin
  moderator
}

enum Type {
  purchaseItem
  loan
}

enum Period {
  daily
  weekly
  monthly
  annually
}

model User {
  id                String     @id @default(uuid())
  name              String?
  email             String     @unique
  password          String     @db.VarChar(255)
  passwordChangedAt Int?
  role              Role       @default(user)
  salary            Float      @default(1000)
  netSalary         Float?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  items             Item[]
  Fellow            Fellow[]
  Spending          Spending[]
}

model Item {
  id             Int       @id @default(autoincrement())
  type           Type      @default(purchaseItem)
  title          String
  price          Float
  purchaseDate   DateTime
  numberOfMonths Int
  monthlyAmount  Float?
  startIn        DateTime
  endIn          DateTime
  status         DateTime?
  notes          String?
  owner          User      @relation(fields: [userId], references: [id])
  userId         String
}

model Fellow {
  id             Int      @id @default(autoincrement())
  manager        String?
  amount         Int
  startIn        DateTime
  endIn          DateTime
  numberOfMonths Int
  turnMonth      Int
  owner          User     @relation(fields: [userId], references: [id])
  userId         String
  status         String?
}

model Spending {
  id       Int    @id @default(autoincrement())
  name     String
  amount   Float
  schedule Period @default(weekly)
  owner    User   @relation(fields: [userId], references: [id])
  userId   String
}

model VerificationCode {
  id        String   @id @default(uuid())
  code      String   @unique
  email     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  verified  Boolean  @default(false)

  @@index([email])
}
